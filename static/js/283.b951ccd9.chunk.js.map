{"version":3,"file":"static/js/283.b951ccd9.chunk.js","mappings":"gOACA,EAAuB,yBAAvB,EAA4D,8BAA5D,EAAsG,8BAAtG,EAA4I,0BAA5I,EAAmL,+B,SCK7KA,GAASC,EAAAA,EAAAA,IAAO,CACpBC,MAAMC,EAAAA,EAAAA,MAASC,IAAI,GAAGC,WACtBC,OAAOH,EAAAA,EAAAA,MAASG,QAAQD,WACxBE,UAAUJ,EAAAA,EAAAA,MAASC,IAAI,GAAGI,IAAI,IAAIH,aAG9BI,EAAoB,CACxBP,KAAM,GACNI,MAAO,GACPC,SAAU,IA0DZ,EAvDmB,WACjB,IAAMG,GAAWC,EAAAA,EAAAA,eAOjB,OACE,SAAC,KAAD,CACEC,cAAeH,EACfI,SARiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GAASM,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAMGE,iBAAkBjB,EAHpB,UAKE,UAAC,KAAD,CAAMkB,aAAa,MAAMC,UAAWC,EAApC,WACE,iBAAKD,UAAWC,EAAhB,WACE,kBAAOC,QAAQ,OAAOF,UAAWC,EAAjC,SAAgD,UAGhD,SAAC,KAAD,CACEF,aAAa,OACbI,KAAK,OACLpB,KAAK,OACLiB,UAAWC,KAEb,SAAC,KAAD,CAAclB,KAAK,OAAOqB,UAAW,YAEvC,iBAAKJ,UAAWC,EAAhB,WACE,kBAAOC,QAAQ,QAAQF,UAAWC,EAAlC,SAAiD,WAGjD,SAAC,KAAD,CACEF,aAAa,QACbI,KAAK,QACLpB,KAAK,QACLiB,UAAWC,KAEb,SAAC,KAAD,CAAclB,KAAK,QAAQqB,UAAW,YAExC,iBAAKJ,UAAWC,EAAhB,WACE,kBAAOC,QAAQ,WAAWF,UAAWC,EAArC,SAAoD,cAGpD,SAAC,KAAD,CAAOE,KAAK,WAAWpB,KAAK,WAAWiB,UAAWC,KAClD,SAAC,KAAD,CAAclB,KAAK,WAAWqB,UAAW,YAG3C,mBAAQD,KAAK,SAASH,UAAWC,EAAjC,SAAiD,iBAMxD,ECjED,EAJmB,WACf,OAAO,SAAC,EAAD,GACV,C","sources":["webpack://react-homework-template/./src/components/SignUpForm/SignUpForm.module.css?655f","components/SignUpForm/SignUpForm.js","pages/SignUpPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignUpForm_form__OYKon\",\"formField\":\"SignUpForm_formField__go2j1\",\"formLabel\":\"SignUpForm_formLabel__iwkcx\",\"input\":\"SignUpForm_input__2jKXC\",\"formButton\":\"SignUpForm_formButton__UvSje\"};","import { useDispatch } from 'react-redux';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport { register } from 'redux/auth/authOperations';\nimport css from './SignUpForm.module.css';\n\nconst scheme = object({\n  name: string().min(2).required(),\n  email: string().email().required(),\n  password: string().min(5).max(10).required(),\n});\n\nconst initialValuesForm = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValuesForm}\n      onSubmit={handleSubmit}\n      validationSchema={scheme}\n    >\n      <Form autoComplete=\"off\" className={css.form}>\n        <div className={css.formField}>\n          <label htmlFor=\"name\" className={css.formLabel}>\n            Name\n          </label>\n          <Field\n            autoComplete=\"name\"\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n          />\n          <ErrorMessage name=\"name\" component={'div'} />\n        </div>\n        <div className={css.formField}>\n          <label htmlFor=\"email\" className={css.formLabel}>\n            Email\n          </label>\n          <Field\n            autoComplete=\"email\"\n            type=\"email\"\n            name=\"email\"\n            className={css.input}\n          />\n          <ErrorMessage name=\"email\" component={'div'} />\n        </div>\n        <div className={css.formField}>\n          <label htmlFor=\"password\" className={css.formLabel}>\n            Password\n          </label>\n          <Field type=\"password\" name=\"password\" className={css.input} />\n          <ErrorMessage name=\"password\" component={'div'} />\n        </div>\n\n        <button type=\"submit\" className={css.formButton}>\n          Register\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SignUpForm;","import SignUpForm from \"components/SignUpForm/SignUpForm\";\n\nconst SignUpPage = () => {\n    return <SignUpForm />;\n};\n\nexport default SignUpPage;"],"names":["scheme","object","name","string","min","required","email","password","max","initialValuesForm","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","register","validationSchema","autoComplete","className","css","htmlFor","type","component"],"sourceRoot":""}